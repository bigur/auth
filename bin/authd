#!/usr/bin/env python3

from logging import getLogger, DEBUG, INFO, WARNING, ERROR

from asyncio import get_event_loop

from bigur.auth import __version__
from bigur.auth import migration
from bigur.auth.amqp import register_services
from bigur.rx import Observer
from bigur.store import Migrator, db
from bigur.utils import argparser, config


argparser.add_argument('-c', '--config', dest='config', metavar='FILE',
                       default='/etc/bigur/auth.conf',
                       help='путь к файлу конфигураци')


logger = getLogger('bigur.auth')

verbosity = config.get('general', 'verbosity', fallback='debug').lower()
if verbosity == 'error':
    logger.setLevel(ERROR)
elif verbosity == 'warning':
    logger.setLevel(WARNING)
elif verbosity == 'info':
    logger.setLevel(INFO)
else:
    logger.setLevel(DEBUG)

loop = get_event_loop()

loop.run_until_complete(Migrator('auth', __version__).on_next(db))


async def main():
    await register_services()
    logger.info('Сервер авторизации Бигура стартовал')


try:
    loop.create_task(main())
    loop.run_forever()
except (KeyboardInterrupt, SystemExit):
    loop.run_until_complete(loop.shutdown_asyncgens())
